services:
  db:
    container_name: "$POSTGRES_HOST"
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "$POSTGRES_USER"
      POSTGRES_DB: "$POSTGRES_DB"
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
    ports:
      - "5432:5432"
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    networks:
      - registration-app

  ldap:
    build:
      context: "$PWD/openldap"
      dockerfile: "$PWD/openldap/Dockerfile"
    container_name: "$LDAP_HOST"
    hostname: "ldap.${LDAP_DOMAIN}"
    restart: always
    environment:
      LDAP_ORGANISATION: "$LDAP_ORGANISATION"
      LDAP_DOMAIN: "$LDAP_DOMAIN"
      LDAP_ADMIN_PASSWORD: "$LDAP_ADMIN_PASSWORD"
      LDAP_BASE_DN: "$LDAP_BASE_DN"
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - "ldap_db:/var/lib/ldap"
      - "ldap_config:/etc/ldap/slapd.d"
      - "ldap_certs:/container/service/slapd/assets/certs"
    networks:
      - registration-app

  fastapi:
    container_name: "fastapi"
    build:
      context: "$PWD/../python"
      dockerfile: "$PWD/fastapi/Dockerfile"
    depends_on:
      - "db"
      - "ldap"
    environment:
      FASTAPI_ENV_PATH: "$FASTAPI_ENV_PATH"
    volumes:
      - "$PWD/.env:$FASTAPI_ENV_PATH"
      # TODO: Determine if this is the best way to share certificates between containers
      - "ldap_certs:${FASTAPI_LDAP_CERTS}:ro"
    ports:
      # TODO Change this to port 5000 when deploying
      - "5001:5001"
    networks:
      - registration-app

# TODO Add this back in
  # vue:
    # container_name: "vue"
    # build:
      # context: "$PWD/../typescript/registration_app"
      # dockerfile: "$PWD/vue/Dockerfile"
    # depends_on:
      # - "fastapi"
    # ports:
      # - "80:80"
    # networks:
      # - "registration-app"




volumes:
  pgdata:
  ldap_db:
  ldap_config:
  ldap_certs:
networks:
  registration-app:
    name: "registration-app"